// Generated by CIRCT firtool-1.66.0
// Standard header to adapt well known macros for register randomization.
`ifndef RANDOMIZE
  `ifdef RANDOMIZE_REG_INIT
    `define RANDOMIZE
  `endif // RANDOMIZE_REG_INIT
`endif // not def RANDOMIZE

// RANDOM may be set to an expression that produces a 32-bit random unsigned value.
`ifndef RANDOM
  `define RANDOM $random
`endif // not def RANDOM

// Users can define INIT_RANDOM as general code that gets injected into the
// initializer block for modules with registers.
`ifndef INIT_RANDOM
  `define INIT_RANDOM
`endif // not def INIT_RANDOM

// If using random initialization, you can also define RANDOMIZE_DELAY to
// customize the delay used, otherwise 0.002 is used.
`ifndef RANDOMIZE_DELAY
  `define RANDOMIZE_DELAY 0.002
`endif // not def RANDOMIZE_DELAY

// Define INIT_RANDOM_PROLOG_ for use in our modules below.
`ifndef INIT_RANDOM_PROLOG_
  `ifdef RANDOMIZE
    `ifdef VERILATOR
      `define INIT_RANDOM_PROLOG_ `INIT_RANDOM
    `else  // VERILATOR
      `define INIT_RANDOM_PROLOG_ `INIT_RANDOM #`RANDOMIZE_DELAY begin end
    `endif // VERILATOR
  `else  // RANDOMIZE
    `define INIT_RANDOM_PROLOG_
  `endif // RANDOMIZE
`endif // not def INIT_RANDOM_PROLOG_

// Include register initializers in init blocks unless synthesis is set
`ifndef SYNTHESIS
  `ifndef ENABLE_INITIAL_REG_
    `define ENABLE_INITIAL_REG_
  `endif // not def ENABLE_INITIAL_REG_
`endif // not def SYNTHESIS

// Include rmemory initializers in init blocks unless synthesis is set
`ifndef SYNTHESIS
  `ifndef ENABLE_INITIAL_MEM_
    `define ENABLE_INITIAL_MEM_
  `endif // not def ENABLE_INITIAL_MEM_
`endif // not def SYNTHESIS

module PS2Keyboard(	// @[src/main/scala/PS2/PS2.scala:6:7]
  input        clock,	// @[src/main/scala/PS2/PS2.scala:6:7]
               reset,	// @[src/main/scala/PS2/PS2.scala:6:7]
               io_clrn,	// @[src/main/scala/PS2/PS2.scala:7:14]
               io_ps2_clk,	// @[src/main/scala/PS2/PS2.scala:7:14]
               io_ps2_data,	// @[src/main/scala/PS2/PS2.scala:7:14]
               io_nextdata_n,	// @[src/main/scala/PS2/PS2.scala:7:14]
  output [7:0] io_data,	// @[src/main/scala/PS2/PS2.scala:7:14]
  output       io_ready	// @[src/main/scala/PS2/PS2.scala:7:14]
);

  reg        ready_reg;	// @[src/main/scala/PS2/PS2.scala:17:29]
  reg        buffer_0;	// @[src/main/scala/PS2/PS2.scala:23:29]
  reg        buffer_1;	// @[src/main/scala/PS2/PS2.scala:23:29]
  reg        buffer_2;	// @[src/main/scala/PS2/PS2.scala:23:29]
  reg        buffer_3;	// @[src/main/scala/PS2/PS2.scala:23:29]
  reg        buffer_4;	// @[src/main/scala/PS2/PS2.scala:23:29]
  reg        buffer_5;	// @[src/main/scala/PS2/PS2.scala:23:29]
  reg        buffer_6;	// @[src/main/scala/PS2/PS2.scala:23:29]
  reg        buffer_7;	// @[src/main/scala/PS2/PS2.scala:23:29]
  reg        buffer_8;	// @[src/main/scala/PS2/PS2.scala:23:29]
  reg        buffer_9;	// @[src/main/scala/PS2/PS2.scala:23:29]
  reg  [7:0] fifo_0;	// @[src/main/scala/PS2/PS2.scala:24:25]
  reg  [7:0] fifo_1;	// @[src/main/scala/PS2/PS2.scala:24:25]
  reg  [7:0] fifo_2;	// @[src/main/scala/PS2/PS2.scala:24:25]
  reg  [7:0] fifo_3;	// @[src/main/scala/PS2/PS2.scala:24:25]
  reg  [7:0] fifo_4;	// @[src/main/scala/PS2/PS2.scala:24:25]
  reg  [7:0] fifo_5;	// @[src/main/scala/PS2/PS2.scala:24:25]
  reg  [7:0] fifo_6;	// @[src/main/scala/PS2/PS2.scala:24:25]
  reg  [7:0] fifo_7;	// @[src/main/scala/PS2/PS2.scala:24:25]
  reg  [2:0] w_ptr;	// @[src/main/scala/PS2/PS2.scala:25:29]
  reg  [2:0] r_ptr;	// @[src/main/scala/PS2/PS2.scala:26:29]
  reg  [3:0] count;	// @[src/main/scala/PS2/PS2.scala:27:29]
  reg  [2:0] ps2_clk_sync;	// @[src/main/scala/PS2/PS2.scala:28:29]
  reg  [7:0] casez_tmp;	// @[src/main/scala/PS2/PS2.scala:74:12]
  always_comb begin	// @[src/main/scala/PS2/PS2.scala:74:12]
    casez (r_ptr)	// @[src/main/scala/PS2/PS2.scala:26:29, :74:12]
      3'b000:
        casez_tmp = fifo_0;	// @[src/main/scala/PS2/PS2.scala:24:25, :74:12]
      3'b001:
        casez_tmp = fifo_1;	// @[src/main/scala/PS2/PS2.scala:24:25, :74:12]
      3'b010:
        casez_tmp = fifo_2;	// @[src/main/scala/PS2/PS2.scala:24:25, :74:12]
      3'b011:
        casez_tmp = fifo_3;	// @[src/main/scala/PS2/PS2.scala:24:25, :74:12]
      3'b100:
        casez_tmp = fifo_4;	// @[src/main/scala/PS2/PS2.scala:24:25, :74:12]
      3'b101:
        casez_tmp = fifo_5;	// @[src/main/scala/PS2/PS2.scala:24:25, :74:12]
      3'b110:
        casez_tmp = fifo_6;	// @[src/main/scala/PS2/PS2.scala:24:25, :74:12]
      default:
        casez_tmp = fifo_7;	// @[src/main/scala/PS2/PS2.scala:24:25, :74:12]
    endcase	// @[src/main/scala/PS2/PS2.scala:26:29, :74:12]
  end // always_comb
  wire       sampling = ps2_clk_sync[2] & ~(ps2_clk_sync[1]);	// @[src/main/scala/PS2/PS2.scala:28:29, :33:{30,34,36,49}]
  wire       _GEN = w_ptr == 3'h1;	// @[src/main/scala/PS2/PS2.scala:25:29, :45:61]
  wire       _GEN_0 = count == 4'hA;	// @[src/main/scala/PS2/PS2.scala:27:29, :54:18]
  wire       _GEN_1 =
    ~buffer_0 & io_ps2_data
    & (buffer_1 ^ buffer_2 ^ buffer_3 ^ buffer_4 ^ buffer_5 ^ buffer_6 ^ buffer_7
       ^ buffer_8 ^ buffer_9);	// @[src/main/scala/PS2/PS2.scala:23:29, :56:{22,31}, :57:27, :58:44]
  wire [7:0] _fifo_T =
    {buffer_8, buffer_7, buffer_6, buffer_5, buffer_4, buffer_3, buffer_2, buffer_1};	// @[src/main/scala/PS2/PS2.scala:23:29, :60:30]
  wire       _GEN_2 = sampling & _GEN_0 & _GEN_1;	// @[src/main/scala/PS2/PS2.scala:25:29, :33:34, :53:20, :54:{18,28}, :56:31, :57:27, :59:11, :62:24]
  always @(posedge clock) begin	// @[src/main/scala/PS2/PS2.scala:6:7]
    if (reset) begin	// @[src/main/scala/PS2/PS2.scala:6:7]
      ready_reg <= 1'h0;	// @[src/main/scala/PS2/PS2.scala:17:29]
      buffer_0 <= 1'h0;	// @[src/main/scala/PS2/PS2.scala:23:29]
      buffer_1 <= 1'h0;	// @[src/main/scala/PS2/PS2.scala:23:29]
      buffer_2 <= 1'h0;	// @[src/main/scala/PS2/PS2.scala:23:29]
      buffer_3 <= 1'h0;	// @[src/main/scala/PS2/PS2.scala:23:29]
      buffer_4 <= 1'h0;	// @[src/main/scala/PS2/PS2.scala:23:29]
      buffer_5 <= 1'h0;	// @[src/main/scala/PS2/PS2.scala:23:29]
      buffer_6 <= 1'h0;	// @[src/main/scala/PS2/PS2.scala:23:29]
      buffer_7 <= 1'h0;	// @[src/main/scala/PS2/PS2.scala:23:29]
      buffer_8 <= 1'h0;	// @[src/main/scala/PS2/PS2.scala:23:29]
      buffer_9 <= 1'h0;	// @[src/main/scala/PS2/PS2.scala:23:29]
      w_ptr <= 3'h0;	// @[src/main/scala/PS2/PS2.scala:25:29]
      r_ptr <= 3'h0;	// @[src/main/scala/PS2/PS2.scala:26:29]
      count <= 4'h0;	// @[src/main/scala/PS2/PS2.scala:27:29]
      ps2_clk_sync <= 3'h0;	// @[src/main/scala/PS2/PS2.scala:28:29]
    end
    else begin	// @[src/main/scala/PS2/PS2.scala:6:7]
      ready_reg <=
        io_clrn
        & (_GEN_2 | ~(ready_reg & ~io_nextdata_n & w_ptr == r_ptr + 3'h1) & ready_reg);	// @[src/main/scala/PS2/PS2.scala:17:29, :25:29, :26:29, :35:18, :40:18, :42:21, :43:{12,28}, :48:{20,31,39}, :49:21, :53:20, :54:28, :59:11, :62:24, :63:24]
      if (~io_clrn | ~sampling | _GEN_0 | (|count)) begin	// @[src/main/scala/PS2/PS2.scala:23:29, :27:29, :33:34, :35:18, :53:20, :54:{18,28}, :68:23]
      end
      else	// @[src/main/scala/PS2/PS2.scala:23:29, :35:18, :53:20, :54:28, :68:23]
        buffer_0 <= io_ps2_data;	// @[src/main/scala/PS2/PS2.scala:23:29]
      if (~io_clrn | ~sampling | _GEN_0 | count != 4'h1) begin	// @[src/main/scala/PS2/PS2.scala:23:29, :27:29, :33:34, :35:18, :53:20, :54:{18,28}, :68:23]
      end
      else	// @[src/main/scala/PS2/PS2.scala:23:29, :35:18, :53:20, :54:28, :68:23]
        buffer_1 <= io_ps2_data;	// @[src/main/scala/PS2/PS2.scala:23:29]
      if (~io_clrn | ~sampling | _GEN_0 | count != 4'h2) begin	// @[src/main/scala/PS2/PS2.scala:23:29, :27:29, :33:34, :35:18, :53:20, :54:{18,28}, :68:23]
      end
      else	// @[src/main/scala/PS2/PS2.scala:23:29, :35:18, :53:20, :54:28, :68:23]
        buffer_2 <= io_ps2_data;	// @[src/main/scala/PS2/PS2.scala:23:29]
      if (~io_clrn | ~sampling | _GEN_0 | count != 4'h3) begin	// @[src/main/scala/PS2/PS2.scala:23:29, :27:29, :33:34, :35:18, :53:20, :54:{18,28}, :68:23]
      end
      else	// @[src/main/scala/PS2/PS2.scala:23:29, :35:18, :53:20, :54:28, :68:23]
        buffer_3 <= io_ps2_data;	// @[src/main/scala/PS2/PS2.scala:23:29]
      if (~io_clrn | ~sampling | _GEN_0 | count != 4'h4) begin	// @[src/main/scala/PS2/PS2.scala:23:29, :27:29, :33:34, :35:18, :53:20, :54:{18,28}, :68:23]
      end
      else	// @[src/main/scala/PS2/PS2.scala:23:29, :35:18, :53:20, :54:28, :68:23]
        buffer_4 <= io_ps2_data;	// @[src/main/scala/PS2/PS2.scala:23:29]
      if (~io_clrn | ~sampling | _GEN_0 | count != 4'h5) begin	// @[src/main/scala/PS2/PS2.scala:23:29, :27:29, :33:34, :35:18, :53:20, :54:{18,28}, :68:23]
      end
      else	// @[src/main/scala/PS2/PS2.scala:23:29, :35:18, :53:20, :54:28, :68:23]
        buffer_5 <= io_ps2_data;	// @[src/main/scala/PS2/PS2.scala:23:29]
      if (~io_clrn | ~sampling | _GEN_0 | count != 4'h6) begin	// @[src/main/scala/PS2/PS2.scala:23:29, :27:29, :33:34, :35:18, :53:20, :54:{18,28}, :68:23]
      end
      else	// @[src/main/scala/PS2/PS2.scala:23:29, :35:18, :53:20, :54:28, :68:23]
        buffer_6 <= io_ps2_data;	// @[src/main/scala/PS2/PS2.scala:23:29]
      if (~io_clrn | ~sampling | _GEN_0 | count != 4'h7) begin	// @[src/main/scala/PS2/PS2.scala:23:29, :27:29, :33:34, :35:18, :53:20, :54:{18,28}, :68:23]
      end
      else	// @[src/main/scala/PS2/PS2.scala:23:29, :35:18, :53:20, :54:28, :68:23]
        buffer_7 <= io_ps2_data;	// @[src/main/scala/PS2/PS2.scala:23:29]
      if (~io_clrn | ~sampling | _GEN_0 | count != 4'h8) begin	// @[src/main/scala/PS2/PS2.scala:23:29, :27:29, :33:34, :35:18, :53:20, :54:{18,28}, :68:23]
      end
      else	// @[src/main/scala/PS2/PS2.scala:23:29, :35:18, :53:20, :54:28, :68:23]
        buffer_8 <= io_ps2_data;	// @[src/main/scala/PS2/PS2.scala:23:29]
      if (~io_clrn | ~sampling | _GEN_0 | count != 4'h9) begin	// @[src/main/scala/PS2/PS2.scala:23:29, :27:29, :33:34, :35:18, :53:20, :54:{18,28}, :68:23]
      end
      else	// @[src/main/scala/PS2/PS2.scala:23:29, :35:18, :53:20, :54:28, :68:23]
        buffer_9 <= io_ps2_data;	// @[src/main/scala/PS2/PS2.scala:23:29]
      if (io_clrn) begin	// @[src/main/scala/PS2/PS2.scala:7:14]
        if (_GEN_2)	// @[src/main/scala/PS2/PS2.scala:25:29, :53:20, :54:28, :59:11, :62:24]
          w_ptr <= w_ptr + 3'h1;	// @[src/main/scala/PS2/PS2.scala:25:29, :62:33]
        if (ready_reg & ~io_nextdata_n & (r_ptr < w_ptr - 3'h1 | (&r_ptr) & _GEN))	// @[src/main/scala/PS2/PS2.scala:17:29, :25:29, :26:29, :42:21, :43:{12,28}, :45:{20,28,34,44,52,61,71}, :46:17]
          r_ptr <= r_ptr + 3'h1;	// @[src/main/scala/PS2/PS2.scala:26:29, :46:26]
        if (sampling) begin	// @[src/main/scala/PS2/PS2.scala:33:34]
          if (_GEN_0)	// @[src/main/scala/PS2/PS2.scala:54:18]
            count <= 4'h0;	// @[src/main/scala/PS2/PS2.scala:27:29]
          else	// @[src/main/scala/PS2/PS2.scala:54:18]
            count <= count + 4'h1;	// @[src/main/scala/PS2/PS2.scala:27:29, :69:32]
        end
      end
      else begin	// @[src/main/scala/PS2/PS2.scala:7:14]
        w_ptr <= 3'h0;	// @[src/main/scala/PS2/PS2.scala:25:29]
        r_ptr <= 3'h0;	// @[src/main/scala/PS2/PS2.scala:26:29]
        count <= 4'h0;	// @[src/main/scala/PS2/PS2.scala:27:29]
      end
      ps2_clk_sync <= {ps2_clk_sync[1:0], io_ps2_clk};	// @[src/main/scala/PS2/PS2.scala:28:29, :31:{22,35}]
    end
    if (io_clrn & sampling & _GEN_0 & _GEN_1 & w_ptr == 3'h0)	// @[src/main/scala/PS2/PS2.scala:24:25, :25:29, :33:34, :35:18, :53:20, :54:{18,28}, :56:31, :57:27, :59:11, :60:24]
      fifo_0 <= _fifo_T;	// @[src/main/scala/PS2/PS2.scala:24:25, :60:30]
    if (io_clrn & sampling & _GEN_0 & _GEN_1 & _GEN)	// @[src/main/scala/PS2/PS2.scala:24:25, :33:34, :35:18, :45:61, :53:20, :54:{18,28}, :56:31, :57:27, :59:11, :60:24]
      fifo_1 <= _fifo_T;	// @[src/main/scala/PS2/PS2.scala:24:25, :60:30]
    if (io_clrn & sampling & _GEN_0 & _GEN_1 & w_ptr == 3'h2)	// @[src/main/scala/PS2/PS2.scala:24:25, :25:29, :33:34, :35:18, :53:20, :54:{18,28}, :56:31, :57:27, :59:11, :60:24]
      fifo_2 <= _fifo_T;	// @[src/main/scala/PS2/PS2.scala:24:25, :60:30]
    if (io_clrn & sampling & _GEN_0 & _GEN_1 & w_ptr == 3'h3)	// @[src/main/scala/PS2/PS2.scala:24:25, :25:29, :33:34, :35:18, :53:20, :54:{18,28}, :56:31, :57:27, :59:11, :60:24]
      fifo_3 <= _fifo_T;	// @[src/main/scala/PS2/PS2.scala:24:25, :60:30]
    if (io_clrn & sampling & _GEN_0 & _GEN_1 & w_ptr == 3'h4)	// @[src/main/scala/PS2/PS2.scala:24:25, :25:29, :33:34, :35:18, :53:20, :54:{18,28}, :56:31, :57:27, :59:11, :60:24]
      fifo_4 <= _fifo_T;	// @[src/main/scala/PS2/PS2.scala:24:25, :60:30]
    if (io_clrn & sampling & _GEN_0 & _GEN_1 & w_ptr == 3'h5)	// @[src/main/scala/PS2/PS2.scala:24:25, :25:29, :33:34, :35:18, :53:20, :54:{18,28}, :56:31, :57:27, :59:11, :60:24]
      fifo_5 <= _fifo_T;	// @[src/main/scala/PS2/PS2.scala:24:25, :60:30]
    if (io_clrn & sampling & _GEN_0 & _GEN_1 & w_ptr == 3'h6)	// @[src/main/scala/PS2/PS2.scala:24:25, :25:29, :33:34, :35:18, :53:20, :54:{18,28}, :56:31, :57:27, :59:11, :60:24]
      fifo_6 <= _fifo_T;	// @[src/main/scala/PS2/PS2.scala:24:25, :60:30]
    if (io_clrn & sampling & _GEN_0 & _GEN_1 & (&w_ptr))	// @[src/main/scala/PS2/PS2.scala:24:25, :25:29, :33:34, :35:18, :53:20, :54:{18,28}, :56:31, :57:27, :59:11, :60:24]
      fifo_7 <= _fifo_T;	// @[src/main/scala/PS2/PS2.scala:24:25, :60:30]
  end // always @(posedge)
  `ifdef ENABLE_INITIAL_REG_	// @[src/main/scala/PS2/PS2.scala:6:7]
    `ifdef FIRRTL_BEFORE_INITIAL	// @[src/main/scala/PS2/PS2.scala:6:7]
      `FIRRTL_BEFORE_INITIAL	// @[src/main/scala/PS2/PS2.scala:6:7]
    `endif // FIRRTL_BEFORE_INITIAL
    logic [31:0] _RANDOM[0:2];	// @[src/main/scala/PS2/PS2.scala:6:7]
    initial begin	// @[src/main/scala/PS2/PS2.scala:6:7]
      `ifdef INIT_RANDOM_PROLOG_	// @[src/main/scala/PS2/PS2.scala:6:7]
        `INIT_RANDOM_PROLOG_	// @[src/main/scala/PS2/PS2.scala:6:7]
      `endif // INIT_RANDOM_PROLOG_
      `ifdef RANDOMIZE_REG_INIT	// @[src/main/scala/PS2/PS2.scala:6:7]
        for (logic [1:0] i = 2'h0; i < 2'h3; i += 2'h1) begin
          _RANDOM[i] = `RANDOM;	// @[src/main/scala/PS2/PS2.scala:6:7]
        end	// @[src/main/scala/PS2/PS2.scala:6:7]
        ready_reg = _RANDOM[2'h0][0];	// @[src/main/scala/PS2/PS2.scala:6:7, :17:29]
        buffer_0 = _RANDOM[2'h0][2];	// @[src/main/scala/PS2/PS2.scala:6:7, :17:29, :23:29]
        buffer_1 = _RANDOM[2'h0][3];	// @[src/main/scala/PS2/PS2.scala:6:7, :17:29, :23:29]
        buffer_2 = _RANDOM[2'h0][4];	// @[src/main/scala/PS2/PS2.scala:6:7, :17:29, :23:29]
        buffer_3 = _RANDOM[2'h0][5];	// @[src/main/scala/PS2/PS2.scala:6:7, :17:29, :23:29]
        buffer_4 = _RANDOM[2'h0][6];	// @[src/main/scala/PS2/PS2.scala:6:7, :17:29, :23:29]
        buffer_5 = _RANDOM[2'h0][7];	// @[src/main/scala/PS2/PS2.scala:6:7, :17:29, :23:29]
        buffer_6 = _RANDOM[2'h0][8];	// @[src/main/scala/PS2/PS2.scala:6:7, :17:29, :23:29]
        buffer_7 = _RANDOM[2'h0][9];	// @[src/main/scala/PS2/PS2.scala:6:7, :17:29, :23:29]
        buffer_8 = _RANDOM[2'h0][10];	// @[src/main/scala/PS2/PS2.scala:6:7, :17:29, :23:29]
        buffer_9 = _RANDOM[2'h0][11];	// @[src/main/scala/PS2/PS2.scala:6:7, :17:29, :23:29]
        fifo_0 = _RANDOM[2'h0][20:13];	// @[src/main/scala/PS2/PS2.scala:6:7, :17:29, :24:25]
        fifo_1 = _RANDOM[2'h0][28:21];	// @[src/main/scala/PS2/PS2.scala:6:7, :17:29, :24:25]
        fifo_2 = {_RANDOM[2'h0][31:29], _RANDOM[2'h1][4:0]};	// @[src/main/scala/PS2/PS2.scala:6:7, :17:29, :24:25]
        fifo_3 = _RANDOM[2'h1][12:5];	// @[src/main/scala/PS2/PS2.scala:6:7, :24:25]
        fifo_4 = _RANDOM[2'h1][20:13];	// @[src/main/scala/PS2/PS2.scala:6:7, :24:25]
        fifo_5 = _RANDOM[2'h1][28:21];	// @[src/main/scala/PS2/PS2.scala:6:7, :24:25]
        fifo_6 = {_RANDOM[2'h1][31:29], _RANDOM[2'h2][4:0]};	// @[src/main/scala/PS2/PS2.scala:6:7, :24:25]
        fifo_7 = _RANDOM[2'h2][12:5];	// @[src/main/scala/PS2/PS2.scala:6:7, :24:25]
        w_ptr = _RANDOM[2'h2][15:13];	// @[src/main/scala/PS2/PS2.scala:6:7, :24:25, :25:29]
        r_ptr = _RANDOM[2'h2][18:16];	// @[src/main/scala/PS2/PS2.scala:6:7, :24:25, :26:29]
        count = _RANDOM[2'h2][22:19];	// @[src/main/scala/PS2/PS2.scala:6:7, :24:25, :27:29]
        ps2_clk_sync = _RANDOM[2'h2][25:23];	// @[src/main/scala/PS2/PS2.scala:6:7, :24:25, :28:29]
      `endif // RANDOMIZE_REG_INIT
    end // initial
    `ifdef FIRRTL_AFTER_INITIAL	// @[src/main/scala/PS2/PS2.scala:6:7]
      `FIRRTL_AFTER_INITIAL	// @[src/main/scala/PS2/PS2.scala:6:7]
    `endif // FIRRTL_AFTER_INITIAL
  `endif // ENABLE_INITIAL_REG_
  assign io_data = casez_tmp;	// @[src/main/scala/PS2/PS2.scala:6:7, :74:12]
  assign io_ready = ready_reg;	// @[src/main/scala/PS2/PS2.scala:6:7, :17:29]
endmodule

module LED(	// @[src/main/scala/LED/LED.scala:8:7]
  input  [3:0] io_in,	// @[src/main/scala/LED/LED.scala:9:14]
  output [6:0] io_out	// @[src/main/scala/LED/LED.scala:9:14]
);

  reg  [6:0] casez_tmp;	// @[src/main/scala/LED/LED.scala:13:23, :14:12, :15:29]
  wire [6:0] _GEN = {3'h0, io_in != 4'hE, 3'h6};	// @[src/main/scala/LED/LED.scala:41:{20,30}, :42:12, :44:12]
  always_comb begin	// @[src/main/scala/LED/LED.scala:13:{14,23}, :14:12, :15:{20,29}, :16:12, :17:{20,29}, :18:12, :19:{20,29}, :20:12, :21:{20,29}, :22:12, :23:{20,29}, :24:12, :25:{20,29}, :26:12, :27:{20,29}, :28:12, :29:{20,29}, :30:12, :31:{20,29}, :32:12, :33:{20,30}, :34:12, :35:{20,30}, :36:12, :37:{20,30}, :38:12, :39:{20,30}, :40:12, :41:30]
    casez (io_in)	// @[src/main/scala/LED/LED.scala:13:{14,23}, :14:12, :15:{20,29}, :16:12, :17:{20,29}, :18:12, :19:{20,29}, :20:12, :21:{20,29}, :22:12, :23:{20,29}, :24:12, :25:{20,29}, :26:12, :27:{20,29}, :28:12, :29:{20,29}, :30:12, :31:{20,29}, :32:12, :33:{20,30}, :34:12, :35:{20,30}, :36:12, :37:{20,30}, :38:12, :39:{20,30}, :40:12, :41:30]
      4'b0000:
        casez_tmp = 7'h40;	// @[src/main/scala/LED/LED.scala:13:{14,23}, :14:12, :15:{20,29}, :16:12, :17:{20,29}, :18:12, :19:{20,29}, :20:12, :21:{20,29}, :22:12, :23:{20,29}, :24:12, :25:{20,29}, :26:12, :27:{20,29}, :28:12, :29:{20,29}, :30:12, :31:{20,29}, :32:12, :33:{20,30}, :34:12, :35:{20,30}, :36:12, :37:{20,30}, :38:12, :39:{20,30}, :40:12, :41:30]
      4'b0001:
        casez_tmp = 7'h79;	// @[src/main/scala/LED/LED.scala:13:{14,23}, :14:12, :15:{20,29}, :16:12, :17:{20,29}, :18:12, :19:{20,29}, :20:12, :21:{20,29}, :22:12, :23:{20,29}, :24:12, :25:{20,29}, :26:12, :27:{20,29}, :28:12, :29:{20,29}, :30:12, :31:{20,29}, :32:12, :33:{20,30}, :34:12, :35:{20,30}, :36:12, :37:{20,30}, :38:12, :39:{20,30}, :40:12, :41:30]
      4'b0010:
        casez_tmp = 7'h24;	// @[src/main/scala/LED/LED.scala:13:{14,23}, :14:12, :15:{20,29}, :16:12, :17:{20,29}, :18:12, :19:{20,29}, :20:12, :21:{20,29}, :22:12, :23:{20,29}, :24:12, :25:{20,29}, :26:12, :27:{20,29}, :28:12, :29:{20,29}, :30:12, :31:{20,29}, :32:12, :33:{20,30}, :34:12, :35:{20,30}, :36:12, :37:{20,30}, :38:12, :39:{20,30}, :40:12, :41:30]
      4'b0011:
        casez_tmp = 7'h30;	// @[src/main/scala/LED/LED.scala:13:{14,23}, :14:12, :15:{20,29}, :16:12, :17:{20,29}, :18:12, :19:{20,29}, :20:12, :21:{20,29}, :22:12, :23:{20,29}, :24:12, :25:{20,29}, :26:12, :27:{20,29}, :28:12, :29:{20,29}, :30:12, :31:{20,29}, :32:12, :33:{20,30}, :34:12, :35:{20,30}, :36:12, :37:{20,30}, :38:12, :39:{20,30}, :40:12, :41:30]
      4'b0100:
        casez_tmp = 7'h19;	// @[src/main/scala/LED/LED.scala:13:{14,23}, :14:12, :15:{20,29}, :16:12, :17:{20,29}, :18:12, :19:{20,29}, :20:12, :21:{20,29}, :22:12, :23:{20,29}, :24:12, :25:{20,29}, :26:12, :27:{20,29}, :28:12, :29:{20,29}, :30:12, :31:{20,29}, :32:12, :33:{20,30}, :34:12, :35:{20,30}, :36:12, :37:{20,30}, :38:12, :39:{20,30}, :40:12, :41:30]
      4'b0101:
        casez_tmp = 7'h12;	// @[src/main/scala/LED/LED.scala:13:{14,23}, :14:12, :15:{20,29}, :16:12, :17:{20,29}, :18:12, :19:{20,29}, :20:12, :21:{20,29}, :22:12, :23:{20,29}, :24:12, :25:{20,29}, :26:12, :27:{20,29}, :28:12, :29:{20,29}, :30:12, :31:{20,29}, :32:12, :33:{20,30}, :34:12, :35:{20,30}, :36:12, :37:{20,30}, :38:12, :39:{20,30}, :40:12, :41:30]
      4'b0110:
        casez_tmp = 7'h2;	// @[src/main/scala/LED/LED.scala:13:{14,23}, :14:12, :15:{20,29}, :16:12, :17:{20,29}, :18:12, :19:{20,29}, :20:12, :21:{20,29}, :22:12, :23:{20,29}, :24:12, :25:{20,29}, :26:12, :27:{20,29}, :28:12, :29:{20,29}, :30:12, :31:{20,29}, :32:12, :33:{20,30}, :34:12, :35:{20,30}, :36:12, :37:{20,30}, :38:12, :39:{20,30}, :40:12, :41:30]
      4'b0111:
        casez_tmp = 7'h78;	// @[src/main/scala/LED/LED.scala:13:{14,23}, :14:12, :15:{20,29}, :16:12, :17:{20,29}, :18:12, :19:{20,29}, :20:12, :21:{20,29}, :22:12, :23:{20,29}, :24:12, :25:{20,29}, :26:12, :27:{20,29}, :28:12, :29:{20,29}, :30:12, :31:{20,29}, :32:12, :33:{20,30}, :34:12, :35:{20,30}, :36:12, :37:{20,30}, :38:12, :39:{20,30}, :40:12, :41:30]
      4'b1000:
        casez_tmp = 7'h0;	// @[src/main/scala/LED/LED.scala:13:{14,23}, :14:12, :15:{20,29}, :16:12, :17:{20,29}, :18:12, :19:{20,29}, :20:12, :21:{20,29}, :22:12, :23:{20,29}, :24:12, :25:{20,29}, :26:12, :27:{20,29}, :28:12, :29:{20,29}, :30:12, :31:{20,29}, :32:12, :33:{20,30}, :34:12, :35:{20,30}, :36:12, :37:{20,30}, :38:12, :39:{20,30}, :40:12, :41:30]
      4'b1001:
        casez_tmp = 7'h10;	// @[src/main/scala/LED/LED.scala:13:{14,23}, :14:12, :15:{20,29}, :16:12, :17:{20,29}, :18:12, :19:{20,29}, :20:12, :21:{20,29}, :22:12, :23:{20,29}, :24:12, :25:{20,29}, :26:12, :27:{20,29}, :28:12, :29:{20,29}, :30:12, :31:{20,29}, :32:12, :33:{20,30}, :34:12, :35:{20,30}, :36:12, :37:{20,30}, :38:12, :39:{20,30}, :40:12, :41:30]
      4'b1010:
        casez_tmp = 7'h8;	// @[src/main/scala/LED/LED.scala:13:{14,23}, :14:12, :15:{20,29}, :16:12, :17:{20,29}, :18:12, :19:{20,29}, :20:12, :21:{20,29}, :22:12, :23:{20,29}, :24:12, :25:{20,29}, :26:12, :27:{20,29}, :28:12, :29:{20,29}, :30:12, :31:{20,29}, :32:12, :33:{20,30}, :34:12, :35:{20,30}, :36:12, :37:{20,30}, :38:12, :39:{20,30}, :40:12, :41:30]
      4'b1011:
        casez_tmp = 7'h3;	// @[src/main/scala/LED/LED.scala:13:{14,23}, :14:12, :15:{20,29}, :16:12, :17:{20,29}, :18:12, :19:{20,29}, :20:12, :21:{20,29}, :22:12, :23:{20,29}, :24:12, :25:{20,29}, :26:12, :27:{20,29}, :28:12, :29:{20,29}, :30:12, :31:{20,29}, :32:12, :33:{20,30}, :34:12, :35:{20,30}, :36:12, :37:{20,30}, :38:12, :39:{20,30}, :40:12, :41:30]
      4'b1100:
        casez_tmp = 7'h46;	// @[src/main/scala/LED/LED.scala:13:{14,23}, :14:12, :15:{20,29}, :16:12, :17:{20,29}, :18:12, :19:{20,29}, :20:12, :21:{20,29}, :22:12, :23:{20,29}, :24:12, :25:{20,29}, :26:12, :27:{20,29}, :28:12, :29:{20,29}, :30:12, :31:{20,29}, :32:12, :33:{20,30}, :34:12, :35:{20,30}, :36:12, :37:{20,30}, :38:12, :39:{20,30}, :40:12, :41:30]
      4'b1101:
        casez_tmp = 7'h21;	// @[src/main/scala/LED/LED.scala:13:{14,23}, :14:12, :15:{20,29}, :16:12, :17:{20,29}, :18:12, :19:{20,29}, :20:12, :21:{20,29}, :22:12, :23:{20,29}, :24:12, :25:{20,29}, :26:12, :27:{20,29}, :28:12, :29:{20,29}, :30:12, :31:{20,29}, :32:12, :33:{20,30}, :34:12, :35:{20,30}, :36:12, :37:{20,30}, :38:12, :39:{20,30}, :40:12, :41:30]
      4'b1110:
        casez_tmp = _GEN;	// @[src/main/scala/LED/LED.scala:13:{14,23}, :14:12, :15:{20,29}, :16:12, :17:{20,29}, :18:12, :19:{20,29}, :20:12, :21:{20,29}, :22:12, :23:{20,29}, :24:12, :25:{20,29}, :26:12, :27:{20,29}, :28:12, :29:{20,29}, :30:12, :31:{20,29}, :32:12, :33:{20,30}, :34:12, :35:{20,30}, :36:12, :37:{20,30}, :38:12, :39:{20,30}, :40:12, :41:30, :42:12, :44:12]
      default:
        casez_tmp = _GEN;	// @[src/main/scala/LED/LED.scala:13:{14,23}, :14:12, :15:{20,29}, :16:12, :17:{20,29}, :18:12, :19:{20,29}, :20:12, :21:{20,29}, :22:12, :23:{20,29}, :24:12, :25:{20,29}, :26:12, :27:{20,29}, :28:12, :29:{20,29}, :30:12, :31:{20,29}, :32:12, :33:{20,30}, :34:12, :35:{20,30}, :36:12, :37:{20,30}, :38:12, :39:{20,30}, :40:12, :41:30, :42:12, :44:12]
    endcase	// @[src/main/scala/LED/LED.scala:13:{14,23}, :14:12, :15:{20,29}, :16:12, :17:{20,29}, :18:12, :19:{20,29}, :20:12, :21:{20,29}, :22:12, :23:{20,29}, :24:12, :25:{20,29}, :26:12, :27:{20,29}, :28:12, :29:{20,29}, :30:12, :31:{20,29}, :32:12, :33:{20,30}, :34:12, :35:{20,30}, :36:12, :37:{20,30}, :38:12, :39:{20,30}, :40:12, :41:30]
  end // always_comb
  assign io_out = casez_tmp;	// @[src/main/scala/LED/LED.scala:8:7, :13:23, :14:12, :15:29]
endmodule

module PS2KeycodeToASCII(	// @[src/main/scala/PS2/PS2.scala:77:7]
  input  [7:0] io_keycode,	// @[src/main/scala/PS2/PS2.scala:78:14]
  output [7:0] io_ascii	// @[src/main/scala/PS2/PS2.scala:78:14]
);

  assign io_ascii =
    io_keycode == 8'h15
      ? 8'h51
      : io_keycode == 8'h1D
          ? 8'h57
          : io_keycode == 8'h24
              ? 8'h45
              : io_keycode == 8'h2D
                  ? 8'h52
                  : io_keycode == 8'h2C
                      ? 8'h54
                      : io_keycode == 8'h35
                          ? 8'h59
                          : io_keycode == 8'h3C
                              ? 8'h55
                              : io_keycode == 8'h43
                                  ? 8'h49
                                  : io_keycode == 8'h44
                                      ? 8'h4F
                                      : io_keycode == 8'h4D
                                          ? 8'h50
                                          : io_keycode == 8'h1C
                                              ? 8'h41
                                              : io_keycode == 8'h1B
                                                  ? 8'h53
                                                  : io_keycode == 8'h23
                                                      ? 8'h44
                                                      : io_keycode == 8'h2B
                                                          ? 8'h46
                                                          : io_keycode == 8'h34
                                                              ? 8'h47
                                                              : io_keycode == 8'h33
                                                                  ? 8'h48
                                                                  : io_keycode == 8'h3B
                                                                      ? 8'h4A
                                                                      : io_keycode == 8'h42
                                                                          ? 8'h4B
                                                                          : io_keycode == 8'h4B
                                                                              ? 8'h4C
                                                                              : io_keycode == 8'h1A
                                                                                  ? 8'h5A
                                                                                  : io_keycode == 8'h22
                                                                                      ? 8'h58
                                                                                      : io_keycode == 8'h21
                                                                                          ? 8'h43
                                                                                          : io_keycode == 8'h2A
                                                                                              ? 8'h56
                                                                                              : io_keycode == 8'h32
                                                                                                  ? 8'h42
                                                                                                  : io_keycode == 8'h31
                                                                                                      ? 8'h4E
                                                                                                      : io_keycode == 8'h3A
                                                                                                          ? 8'h4D
                                                                                                          : io_keycode == 8'h45
                                                                                                              ? 8'h30
                                                                                                              : io_keycode == 8'h16
                                                                                                                  ? 8'h31
                                                                                                                  : io_keycode == 8'h1E
                                                                                                                      ? 8'h32
                                                                                                                      : io_keycode == 8'h26
                                                                                                                          ? 8'h33
                                                                                                                          : io_keycode == 8'h25
                                                                                                                              ? 8'h34
                                                                                                                              : io_keycode == 8'h2E
                                                                                                                                  ? 8'h35
                                                                                                                                  : io_keycode == 8'h36
                                                                                                                                      ? 8'h36
                                                                                                                                      : io_keycode == 8'h3D
                                                                                                                                          ? 8'h37
                                                                                                                                          : io_keycode == 8'h3E
                                                                                                                                              ? 8'h38
                                                                                                                                              : io_keycode == 8'h46
                                                                                                                                                  ? 8'h39
                                                                                                                                                  : 8'h0;	// @[src/main/scala/PS2/PS2.scala:77:7, :83:12, :85:22, :86:28, :87:28, :88:28, :89:28, :90:28, :91:28, :92:28, :93:28, :94:28, :95:28, :96:28, :97:28, :98:28, :99:28, :100:28, :101:28, :102:28, :103:28, :104:28, :105:28, :106:28, :107:28, :108:28, :109:28, :110:28, :111:28, :113:28, :114:28, :115:28, :116:28, :117:28, :118:28, :119:28, :120:28, :121:28, :122:28]
endmodule

module Display(	// @[src/main/scala/Display/Display.scala:8:7]
  input        clock,	// @[src/main/scala/Display/Display.scala:8:7]
               reset,	// @[src/main/scala/Display/Display.scala:8:7]
               io_clrn,	// @[src/main/scala/Display/Display.scala:9:14]
               io_ps2_clk,	// @[src/main/scala/Display/Display.scala:9:14]
               io_ps2_data,	// @[src/main/scala/Display/Display.scala:9:14]
  output [6:0] io_out0,	// @[src/main/scala/Display/Display.scala:9:14]
               io_out1,	// @[src/main/scala/Display/Display.scala:9:14]
               io_out2,	// @[src/main/scala/Display/Display.scala:9:14]
               io_out3,	// @[src/main/scala/Display/Display.scala:9:14]
               io_out4,	// @[src/main/scala/Display/Display.scala:9:14]
               io_out5	// @[src/main/scala/Display/Display.scala:9:14]
);

  wire [7:0] _ascii_io_ascii;	// @[src/main/scala/Display/Display.scala:52:21]
  wire [7:0] _keyboard_io_data;	// @[src/main/scala/Display/Display.scala:21:24]
  wire       _keyboard_io_ready;	// @[src/main/scala/Display/Display.scala:21:24]
  reg        nextdata_n;	// @[src/main/scala/Display/Display.scala:25:27]
  reg  [7:0] data;	// @[src/main/scala/Display/Display.scala:28:22]
  reg  [7:0] data_last;	// @[src/main/scala/Display/Display.scala:29:26]
  reg  [7:0] times;	// @[src/main/scala/Display/Display.scala:30:26]
  always @(posedge clock) begin	// @[src/main/scala/Display/Display.scala:8:7]
    if (reset) begin	// @[src/main/scala/Display/Display.scala:8:7]
      nextdata_n <= 1'h1;	// @[src/main/scala/Display/Display.scala:8:7, :25:27]
      data_last <= 8'h0;	// @[src/main/scala/Display/Display.scala:29:26]
      times <= 8'h0;	// @[src/main/scala/Display/Display.scala:30:26]
    end
    else begin	// @[src/main/scala/Display/Display.scala:8:7]
      nextdata_n <= ~_keyboard_io_ready;	// @[src/main/scala/Display/Display.scala:21:24, :25:27, :37:15, :38:16, :44:16]
      if (_keyboard_io_ready)	// @[src/main/scala/Display/Display.scala:21:24]
        data_last <= data;	// @[src/main/scala/Display/Display.scala:28:22, :29:26]
      if (_keyboard_io_ready & data == 8'hF0 & data_last != 8'hF0)	// @[src/main/scala/Display/Display.scala:21:24, :28:22, :29:26, :30:26, :37:15, :39:{15,27,40,53}, :40:13]
        times <= times + 8'h1;	// @[src/main/scala/Display/Display.scala:30:26, :40:22]
    end
    data <= _keyboard_io_data;	// @[src/main/scala/Display/Display.scala:21:24, :28:22]
  end // always @(posedge)
  `ifdef ENABLE_INITIAL_REG_	// @[src/main/scala/Display/Display.scala:8:7]
    `ifdef FIRRTL_BEFORE_INITIAL	// @[src/main/scala/Display/Display.scala:8:7]
      `FIRRTL_BEFORE_INITIAL	// @[src/main/scala/Display/Display.scala:8:7]
    `endif // FIRRTL_BEFORE_INITIAL
    logic [31:0] _RANDOM[0:0];	// @[src/main/scala/Display/Display.scala:8:7]
    initial begin	// @[src/main/scala/Display/Display.scala:8:7]
      `ifdef INIT_RANDOM_PROLOG_	// @[src/main/scala/Display/Display.scala:8:7]
        `INIT_RANDOM_PROLOG_	// @[src/main/scala/Display/Display.scala:8:7]
      `endif // INIT_RANDOM_PROLOG_
      `ifdef RANDOMIZE_REG_INIT	// @[src/main/scala/Display/Display.scala:8:7]
        _RANDOM[/*Zero width*/ 1'b0] = `RANDOM;	// @[src/main/scala/Display/Display.scala:8:7]
        nextdata_n = _RANDOM[/*Zero width*/ 1'b0][0];	// @[src/main/scala/Display/Display.scala:8:7, :25:27]
        data = _RANDOM[/*Zero width*/ 1'b0][8:1];	// @[src/main/scala/Display/Display.scala:8:7, :25:27, :28:22]
        data_last = _RANDOM[/*Zero width*/ 1'b0][16:9];	// @[src/main/scala/Display/Display.scala:8:7, :25:27, :29:26]
        times = _RANDOM[/*Zero width*/ 1'b0][24:17];	// @[src/main/scala/Display/Display.scala:8:7, :25:27, :30:26]
      `endif // RANDOMIZE_REG_INIT
    end // initial
    `ifdef FIRRTL_AFTER_INITIAL	// @[src/main/scala/Display/Display.scala:8:7]
      `FIRRTL_AFTER_INITIAL	// @[src/main/scala/Display/Display.scala:8:7]
    `endif // FIRRTL_AFTER_INITIAL
  `endif // ENABLE_INITIAL_REG_
  PS2Keyboard keyboard (	// @[src/main/scala/Display/Display.scala:21:24]
    .clock         (clock),
    .reset         (reset),
    .io_clrn       (io_clrn),
    .io_ps2_clk    (io_ps2_clk),
    .io_ps2_data   (io_ps2_data),
    .io_nextdata_n (nextdata_n),	// @[src/main/scala/Display/Display.scala:25:27]
    .io_data       (_keyboard_io_data),
    .io_ready      (_keyboard_io_ready)
  );	// @[src/main/scala/Display/Display.scala:21:24]
  LED led0 (	// @[src/main/scala/Display/Display.scala:46:20]
    .io_in  (data[3:0]),	// @[src/main/scala/Display/Display.scala:28:22, :47:21]
    .io_out (io_out0)
  );	// @[src/main/scala/Display/Display.scala:46:20]
  LED led1 (	// @[src/main/scala/Display/Display.scala:49:20]
    .io_in  (data[7:4]),	// @[src/main/scala/Display/Display.scala:28:22, :50:21]
    .io_out (io_out1)
  );	// @[src/main/scala/Display/Display.scala:49:20]
  PS2KeycodeToASCII ascii (	// @[src/main/scala/Display/Display.scala:52:21]
    .io_keycode (data),	// @[src/main/scala/Display/Display.scala:28:22]
    .io_ascii   (_ascii_io_ascii)
  );	// @[src/main/scala/Display/Display.scala:52:21]
  LED led2 (	// @[src/main/scala/Display/Display.scala:53:21]
    .io_in  (_ascii_io_ascii[3:0]),	// @[src/main/scala/Display/Display.scala:52:21, :56:37]
    .io_out (io_out2)
  );	// @[src/main/scala/Display/Display.scala:53:21]
  LED led3 (	// @[src/main/scala/Display/Display.scala:54:21]
    .io_in  (_ascii_io_ascii[7:4]),	// @[src/main/scala/Display/Display.scala:52:21, :57:37]
    .io_out (io_out3)
  );	// @[src/main/scala/Display/Display.scala:54:21]
  LED led4 (	// @[src/main/scala/Display/Display.scala:60:20]
    .io_in  (times[3:0]),	// @[src/main/scala/Display/Display.scala:30:26, :61:22]
    .io_out (io_out4)
  );	// @[src/main/scala/Display/Display.scala:60:20]
  LED led5 (	// @[src/main/scala/Display/Display.scala:63:20]
    .io_in  (times[7:4]),	// @[src/main/scala/Display/Display.scala:30:26, :64:22]
    .io_out (io_out5)
  );	// @[src/main/scala/Display/Display.scala:63:20]
endmodule

module top(	// @[src/main/scala/top.scala:8:7]
  input        clock,	// @[src/main/scala/top.scala:8:7]
               reset,	// @[src/main/scala/top.scala:8:7]
               io_clrn,	// @[src/main/scala/top.scala:9:14]
               io_ps2_clk,	// @[src/main/scala/top.scala:9:14]
               io_ps2_data,	// @[src/main/scala/top.scala:9:14]
  output [6:0] io_out0,	// @[src/main/scala/top.scala:9:14]
               io_out1,	// @[src/main/scala/top.scala:9:14]
               io_out2,	// @[src/main/scala/top.scala:9:14]
               io_out3,	// @[src/main/scala/top.scala:9:14]
               io_out4,	// @[src/main/scala/top.scala:9:14]
               io_out5	// @[src/main/scala/top.scala:9:14]
);

  Display display (	// @[src/main/scala/top.scala:21:23]
    .clock       (clock),
    .reset       (reset),
    .io_clrn     (~io_clrn),	// @[src/main/scala/top.scala:22:26]
    .io_ps2_clk  (io_ps2_clk),
    .io_ps2_data (io_ps2_data),
    .io_out0     (io_out0),
    .io_out1     (io_out1),
    .io_out2     (io_out2),
    .io_out3     (io_out3),
    .io_out4     (io_out4),
    .io_out5     (io_out5)
  );	// @[src/main/scala/top.scala:21:23]
endmodule

