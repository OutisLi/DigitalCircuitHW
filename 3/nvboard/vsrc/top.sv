// Generated by CIRCT firtool-1.66.0
module Adder(	// @[src/main/scala/Adder/adder.scala:6:7]
  input  [3:0] io_a,	// @[src/main/scala/Adder/adder.scala:7:14]
               io_b,	// @[src/main/scala/Adder/adder.scala:7:14]
  input        io_ctrl,	// @[src/main/scala/Adder/adder.scala:7:14]
  output       io_carry,	// @[src/main/scala/Adder/adder.scala:7:14]
               io_overflow,	// @[src/main/scala/Adder/adder.scala:7:14]
               io_zero,	// @[src/main/scala/Adder/adder.scala:7:14]
  output [3:0] io_res	// @[src/main/scala/Adder/adder.scala:7:14]
);

  wire [3:0] _t_add_Cin_T_2 = ({4{io_ctrl}} ^ io_b) + {3'h0, io_ctrl};	// @[src/main/scala/Adder/adder.scala:16:23, :17:{30,45}]
  wire [4:0] sum = {io_a[3], io_a} + {_t_add_Cin_T_2[3], _t_add_Cin_T_2};	// @[src/main/scala/Adder/adder.scala:17:45, :18:24]
  assign io_carry = sum[4] ^ io_ctrl;	// @[src/main/scala/Adder/adder.scala:6:7, :18:24, :20:{22,30}]
  assign io_overflow = io_a[3] == _t_add_Cin_T_2[3] & sum[3] != io_a[3];	// @[src/main/scala/Adder/adder.scala:6:7, :17:45, :18:24, :21:{24,36,49,62,72,84}]
  assign io_zero = sum[3:0] == 4'h0;	// @[src/main/scala/Adder/adder.scala:6:7, :18:24, :19:21, :22:25]
  assign io_res = sum[3:0];	// @[src/main/scala/Adder/adder.scala:6:7, :18:24, :19:21]
endmodule

module Comparator(	// @[src/main/scala/Comparator/comparator.scala:9:7]
  input  [3:0] io_A,	// @[src/main/scala/Comparator/comparator.scala:10:14]
               io_B,	// @[src/main/scala/Comparator/comparator.scala:10:14]
  output       io_out,	// @[src/main/scala/Comparator/comparator.scala:10:14]
               io_eq	// @[src/main/scala/Comparator/comparator.scala:10:14]
);

  wire       _adder_io_overflow;	// @[src/main/scala/Comparator/comparator.scala:16:21]
  wire [3:0] _adder_io_res;	// @[src/main/scala/Comparator/comparator.scala:16:21]
  Adder adder (	// @[src/main/scala/Comparator/comparator.scala:16:21]
    .io_a        (io_A),
    .io_b        (io_B),
    .io_ctrl     (1'h1),
    .io_carry    (/* unused */),
    .io_overflow (_adder_io_overflow),
    .io_zero     (io_eq),
    .io_res      (_adder_io_res)
  );	// @[src/main/scala/Comparator/comparator.scala:16:21]
  assign io_out = _adder_io_overflow ^ _adder_io_res[3];	// @[src/main/scala/Comparator/comparator.scala:9:7, :16:21, :23:{16,35}]
endmodule

module ALU(	// @[src/main/scala/ALU/ALU.scala:8:7]
  input  [2:0] io_func,	// @[src/main/scala/ALU/ALU.scala:9:14]
  input  [3:0] io_A,	// @[src/main/scala/ALU/ALU.scala:9:14]
               io_B,	// @[src/main/scala/ALU/ALU.scala:9:14]
  output [3:0] io_out,	// @[src/main/scala/ALU/ALU.scala:9:14]
  output       io_zero,	// @[src/main/scala/ALU/ALU.scala:9:14]
               io_overflow,	// @[src/main/scala/ALU/ALU.scala:9:14]
               io_carry	// @[src/main/scala/ALU/ALU.scala:9:14]
);

  wire       _comparator_io_out;	// @[src/main/scala/ALU/ALU.scala:42:28]
  wire       _comparator_io_eq;	// @[src/main/scala/ALU/ALU.scala:42:28]
  wire       _adder_io_carry;	// @[src/main/scala/ALU/ALU.scala:25:23]
  wire       _adder_io_overflow;	// @[src/main/scala/ALU/ALU.scala:25:23]
  wire       _adder_io_zero;	// @[src/main/scala/ALU/ALU.scala:25:23]
  wire [3:0] _adder_io_res;	// @[src/main/scala/ALU/ALU.scala:25:23]
  wire       _GEN = ~(|io_func) | io_func == 3'h1;	// @[src/main/scala/ALU/ALU.scala:24:{16,29,40}]
  reg  [3:0] casez_tmp;	// @[src/main/scala/ALU/ALU.scala:33:36, :34:12, :35:36]
  wire [3:0] _io_out_T_13 =
    {3'h0, io_func == 3'h6 ? _comparator_io_out : _comparator_io_eq};	// @[src/main/scala/ALU/ALU.scala:24:16, :41:22, :42:28, :45:27]
  always_comb begin	// @[src/main/scala/ALU/ALU.scala:19:15, :33:{22,36}, :34:12, :35:{22,36}, :36:12, :37:{22,36}, :38:12, :39:{22,36}, :40:12, :41:{35,60}, :45:21]
    casez (io_func)	// @[src/main/scala/ALU/ALU.scala:19:15, :33:{22,36}, :34:12, :35:{22,36}, :36:12, :37:{22,36}, :38:12, :39:{22,36}, :40:12, :41:{35,60}, :45:21]
      3'b000:
        casez_tmp = 4'h0;	// @[src/main/scala/ALU/ALU.scala:19:15, :33:{22,36}, :34:12, :35:{22,36}, :36:12, :37:{22,36}, :38:12, :39:{22,36}, :40:12, :41:{35,60}, :45:21]
      3'b001:
        casez_tmp = 4'h0;	// @[src/main/scala/ALU/ALU.scala:19:15, :33:{22,36}, :34:12, :35:{22,36}, :36:12, :37:{22,36}, :38:12, :39:{22,36}, :40:12, :41:{35,60}, :45:21]
      3'b010:
        casez_tmp = ~io_A;	// @[src/main/scala/ALU/ALU.scala:19:15, :33:{22,36}, :34:{12,15}, :35:{22,36}, :36:12, :37:{22,36}, :38:12, :39:{22,36}, :40:12, :41:{35,60}, :45:21]
      3'b011:
        casez_tmp = io_A & io_B;	// @[src/main/scala/ALU/ALU.scala:19:15, :33:{22,36}, :34:12, :35:{22,36}, :36:{12,20}, :37:{22,36}, :38:12, :39:{22,36}, :40:12, :41:{35,60}, :45:21]
      3'b100:
        casez_tmp = io_A | io_B;	// @[src/main/scala/ALU/ALU.scala:19:15, :33:{22,36}, :34:12, :35:{22,36}, :36:12, :37:{22,36}, :38:{12,20}, :39:{22,36}, :40:12, :41:{35,60}, :45:21]
      3'b101:
        casez_tmp = io_A ^ io_B;	// @[src/main/scala/ALU/ALU.scala:19:15, :33:{22,36}, :34:12, :35:{22,36}, :36:12, :37:{22,36}, :38:12, :39:{22,36}, :40:{12,20}, :41:{35,60}, :45:21]
      3'b110:
        casez_tmp = _io_out_T_13;	// @[src/main/scala/ALU/ALU.scala:19:15, :33:{22,36}, :34:12, :35:{22,36}, :36:12, :37:{22,36}, :38:12, :39:{22,36}, :40:12, :41:{35,60}, :45:{21,27}]
      default:
        casez_tmp = _io_out_T_13;	// @[src/main/scala/ALU/ALU.scala:19:15, :33:{22,36}, :34:12, :35:{22,36}, :36:12, :37:{22,36}, :38:12, :39:{22,36}, :40:12, :41:{35,60}, :45:{21,27}]
    endcase	// @[src/main/scala/ALU/ALU.scala:19:15, :33:{22,36}, :34:12, :35:{22,36}, :36:12, :37:{22,36}, :38:12, :39:{22,36}, :40:12, :41:{35,60}, :45:21]
  end // always_comb
  Adder adder (	// @[src/main/scala/ALU/ALU.scala:25:23]
    .io_a        (io_A),
    .io_b        (io_B),
    .io_ctrl     (|io_func),	// @[src/main/scala/ALU/ALU.scala:24:16]
    .io_carry    (_adder_io_carry),
    .io_overflow (_adder_io_overflow),
    .io_zero     (_adder_io_zero),
    .io_res      (_adder_io_res)
  );	// @[src/main/scala/ALU/ALU.scala:25:23]
  Comparator comparator (	// @[src/main/scala/ALU/ALU.scala:42:28]
    .io_A   (io_A),
    .io_B   (io_B),
    .io_out (_comparator_io_out),
    .io_eq  (_comparator_io_eq)
  );	// @[src/main/scala/ALU/ALU.scala:42:28]
  assign io_out = _GEN ? _adder_io_res : casez_tmp;	// @[src/main/scala/ALU/ALU.scala:8:7, :24:{29,54}, :25:23, :29:19, :33:36, :34:12, :35:36]
  assign io_zero = _GEN & _adder_io_zero;	// @[src/main/scala/ALU/ALU.scala:8:7, :20:15, :24:{29,54}, :25:23, :30:19]
  assign io_overflow = _GEN & _adder_io_overflow;	// @[src/main/scala/ALU/ALU.scala:8:7, :21:15, :24:{29,54}, :25:23, :31:19]
  assign io_carry = _GEN & _adder_io_carry;	// @[src/main/scala/ALU/ALU.scala:8:7, :22:15, :24:{29,54}, :25:23, :32:19]
endmodule

module top(	// @[src/main/scala/top.scala:6:7]
  input        clock,	// @[src/main/scala/top.scala:6:7]
               reset,	// @[src/main/scala/top.scala:6:7]
  input  [2:0] io_func,	// @[src/main/scala/top.scala:7:14]
  input  [3:0] io_A,	// @[src/main/scala/top.scala:7:14]
               io_B,	// @[src/main/scala/top.scala:7:14]
  output [3:0] io_out,	// @[src/main/scala/top.scala:7:14]
  output       io_zero,	// @[src/main/scala/top.scala:7:14]
               io_overflow,	// @[src/main/scala/top.scala:7:14]
               io_carry	// @[src/main/scala/top.scala:7:14]
);

  ALU alu (	// @[src/main/scala/top.scala:16:19]
    .io_func     (io_func),
    .io_A        (io_A),
    .io_B        (io_B),
    .io_out      (io_out),
    .io_zero     (io_zero),
    .io_overflow (io_overflow),
    .io_carry    (io_carry)
  );	// @[src/main/scala/top.scala:16:19]
endmodule

